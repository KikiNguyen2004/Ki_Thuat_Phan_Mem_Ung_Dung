package MVC.Controller.QLPK;

import java.sql.*;
import MVC.View.QLPK.MainView;
import MVC.View.QLPK.EmployeeMainView;
import MVC.View.QLPK.DoctorMainView;

public class LoginController {
    private Connection conn;

    // Constructor, mở kết nối cơ sở dữ liệu
    public LoginController() {
        try {
            
        	// Initialize database connection
	        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
	        String url = "jdbc:sqlserver://localhost:1433;databaseName=QuanLyPhongKham;encrypt=true;trustServerCertificate=true";
	        String username = "sa";
	        String password = "Phucthan@2004";
	        conn = DriverManager.getConnection(url, username, password);
	        
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Phương thức xác thực tài khoản và mật khẩu
    public boolean validateLogin(String account, String password) {
        String sql = "SELECT * FROM Employee WHERE maNhanVien = ? AND matKhau = ? "
                     + "UNION "
                     + "SELECT * FROM Employer WHERE maQuanLy = ? AND matKhau = ?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, account);
            stmt.setString(2, password);
            stmt.setString(3, account);
            stmt.setString(4, password);

            ResultSet rs = stmt.executeQuery();
            return rs.next();  // Nếu có kết quả thì tài khoản và mật khẩu đúng
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    // Phương thức xác định loại tài khoản (NVxxx hoặc QLxxx)
    public String getUserType(String account) {
        if (account.startsWith("NV")) {
            return "Employee";
        } else if (account.startsWith("QL")) {
            return "Employer";
        }
        return "Unknown";
    }
    
    private UserModel userModel;
    private LoginView loginView;

    public LoginController() {
        userModel = new UserModel();
        loginView = new LoginView();
        loginView.setVisible(true);
    }
}
    // Phương thức xử lý đăng nhập
    public void handleLogin(String username, String password) {
        if (username.isEmpty() || password.isEmpty()) {
            loginView.showErrorMessage("Tài khoản hoặc mật khẩu không được để trống.");
        } else {
            // Kiểm tra thông tin đăng nhập
            if (userModel.validateLogin(username, password)) {
                String userType = userModel.getUserType(username);
                if (userType.equals("Employee")) {
                    // Điều hướng đến EmployeeMainView
                    new EmployeeMainView().setVisible(true);
                } else if (userType.equals("Employer")) {
                    // Điều hướng đến EmployerMainView
                    new EmployerMainView().setVisible(true);
                }
                loginView.setVisible(false);
            } else {
                loginView.showErrorMessage("Tài khoản hoặc mật khẩu không chính xác.");
            }
        }
    }
}

